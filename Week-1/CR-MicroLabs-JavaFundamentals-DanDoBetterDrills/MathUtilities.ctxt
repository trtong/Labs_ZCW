#BlueJ class context
comment0.target=MathUtilities
comment0.text=\n\ Created\ by\ dan\ on\ 6/14/17.\n
comment1.params=baseValue\ difference
comment1.target=java.lang.Integer\ add(int,\ int)
comment1.text=\n\ @param\ baseValue\ \ starting\ value\n\ @param\ difference\ value\ to\ add\ to\ starting\ value\n\ @return\ sum\ of\ `baseValue`\ and\ `difference`\n
comment10.params=baseValue\ difference
comment10.target=java.lang.Byte\ subtract(byte,\ byte)
comment10.text=\n\ @param\ baseValue\ \ starting\ value\n\ @param\ difference\ value\ to\ subtract\ from\ starting\ value\n\ @return\ difference\ between\ `baseValue`\ and\ `difference`\n
comment11.params=baseValue\ difference
comment11.target=java.lang.Float\ subtract(float,\ float)
comment11.text=\n\ @param\ baseValue\ \ starting\ value\n\ @param\ difference\ value\ to\ subtract\ from\ starting\ value\n\ @return\ difference\ between\ `baseValue`\ and\ `difference`\n
comment12.params=baseValue\ difference
comment12.target=java.lang.Double\ subtract(double,\ double)
comment12.text=\n\ @param\ baseValue\ \ starting\ value\n\ @param\ difference\ value\ to\ subtract\ from\ starting\ value\n\ @return\ difference\ between\ `baseValue`\ and\ `difference`\n
comment13.params=dividend\ divisor
comment13.target=java.lang.Integer\ divide(int,\ int)
comment13.text=\n\ @param\ dividend\ value\ to\ be\ divided\n\ @param\ divisor\ value\ to\ divide\ by\n\ @return\ division\ of\ `dividend`\ by\ `divisor\n
comment14.params=dividend\ divisor
comment14.target=java.lang.Long\ divide(long,\ long)
comment14.text=\n\ @param\ dividend\ value\ to\ be\ divided\n\ @param\ divisor\ value\ to\ divide\ by\n\ @return\ division\ of\ `dividend`\ by\ `divisor\n
comment15.params=dividend\ divisor
comment15.target=java.lang.Short\ divide(short,\ short)
comment15.text=\n\ @param\ dividend\ value\ to\ be\ divided\n\ @param\ divisor\ value\ to\ divide\ by\n\ @return\ division\ of\ `dividend`\ by\ `divisor\n
comment16.params=dividend\ divisor
comment16.target=java.lang.Byte\ divide(byte,\ byte)
comment16.text=\n\ @param\ dividend\ value\ to\ be\ divided\n\ @param\ divisor\ value\ to\ divide\ by\n\ @return\ division\ of\ `dividend`\ by\ `divisor\n
comment17.params=dividend\ divisor
comment17.target=java.lang.Float\ divide(float,\ float)
comment17.text=\n\ @param\ dividend\ value\ to\ be\ divided\n\ @param\ divisor\ value\ to\ divide\ by\n\ @return\ division\ of\ `dividend`\ by\ `divisor\n
comment18.params=dividend\ divisor
comment18.target=java.lang.Double\ divide(double,\ double)
comment18.text=\n\ @param\ dividend\ value\ to\ be\ divided\n\ @param\ divisor\ value\ to\ divide\ by\n\ @return\ division\ of\ `dividend`\ by\ `divisor\n
comment19.params=multiplicand\ multiplier
comment19.target=java.lang.Integer\ multiply(int,\ int)
comment19.text=\n\ @param\ multiplicand\ value\ to\ be\ multiplied\n\ @param\ multiplier\ value\ to\ multiply\ by\n\ @return\ product\ of\ `multiplicand`\ by\ `multiplier`\n
comment2.params=baseValue\ difference
comment2.target=java.lang.Long\ add(long,\ long)
comment2.text=\n\ @param\ baseValue\ \ starting\ value\n\ @param\ difference\ value\ to\ add\ to\ starting\ value\n\ @return\ sum\ of\ `baseValue`\ and\ `difference`\n
comment20.params=multiplicand\ multiplier
comment20.target=java.lang.Long\ multiply(long,\ long)
comment20.text=\n\ @param\ multiplicand\ value\ to\ be\ multiplied\n\ @param\ multiplier\ value\ to\ multiply\ by\n\ @return\ product\ of\ `multiplicand`\ by\ `multiplier`\n
comment21.params=multiplicand\ multiplier
comment21.target=java.lang.Short\ multiply(short,\ short)
comment21.text=\n\ @param\ multiplicand\ value\ to\ be\ multiplied\n\ @param\ multiplier\ value\ to\ multiply\ by\n\ @return\ product\ of\ `multiplicand`\ by\ `multiplier`\n
comment22.params=multiplicand\ multiplier
comment22.target=java.lang.Byte\ multiply(byte,\ byte)
comment22.text=\n\ @param\ multiplicand\ value\ to\ be\ multiplied\n\ @param\ multiplier\ value\ to\ multiply\ by\n\ @return\ product\ of\ `multiplicand`\ by\ `multiplier`\n
comment23.params=multiplicand\ multiplier
comment23.target=java.lang.Float\ multiply(float,\ float)
comment23.text=\n\ @param\ multiplicand\ value\ to\ be\ multiplied\n\ @param\ multiplier\ value\ to\ multiply\ by\n\ @return\ product\ of\ `multiplicand`\ by\ `multiplier`\n
comment24.params=multiplicand\ multiplier
comment24.target=java.lang.Double\ multiply(double,\ double)
comment24.text=\n\ @param\ multiplicand\ value\ to\ be\ multiplied\n\ @param\ multiplier\ value\ to\ multiply\ by\n\ @return\ product\ of\ `multiplicand`\ by\ `multiplier`\n
comment25.params=
comment25.target=java.lang.Boolean\ returnTrue()
comment25.text=\n\ @return\ true\n
comment26.params=
comment26.target=java.lang.Boolean\ returnFalse()
comment26.text=\n\ @return\ false\n
comment3.params=baseValue\ difference
comment3.target=java.lang.Short\ add(short,\ short)
comment3.text=\n\ @param\ baseValue\ \ starting\ value\n\ @param\ difference\ value\ to\ add\ to\ starting\ value\n\ @return\ sum\ of\ `baseValue`\ and\ `difference`\n
comment4.params=baseValue\ difference
comment4.target=java.lang.Byte\ add(byte,\ byte)
comment4.text=\n\ @param\ baseValue\ \ starting\ value\n\ @param\ difference\ value\ to\ add\ to\ starting\ value\n\ @return\ sum\ of\ `baseValue`\ and\ `difference`\n
comment5.params=baseValue\ difference
comment5.target=java.lang.Float\ add(float,\ float)
comment5.text=\n\ @param\ baseValue\ \ starting\ value\n\ @param\ difference\ value\ to\ add\ to\ starting\ value\n\ @return\ sum\ of\ `baseValue`\ and\ `difference`\n
comment6.params=baseValue\ difference
comment6.target=java.lang.Double\ add(double,\ double)
comment6.text=\n\ @param\ baseValue\ \ starting\ value\n\ @param\ difference\ value\ to\ add\ to\ starting\ value\n\ @return\ sum\ of\ `baseValue`\ and\ `difference`\n
comment7.params=baseValue\ difference
comment7.target=java.lang.Integer\ subtract(int,\ int)
comment7.text=\n\ @param\ baseValue\ \ starting\ value\n\ @param\ difference\ value\ to\ subtract\ from\ starting\ value\n\ @return\ difference\ between\ `baseValue`\ and\ `difference`\n
comment8.params=baseValue\ difference
comment8.target=java.lang.Long\ subtract(long,\ long)
comment8.text=\n\ @param\ baseValue\ \ starting\ value\n\ @param\ difference\ value\ to\ subtract\ from\ starting\ value\n\ @return\ difference\ between\ `baseValue`\ and\ `difference`\n
comment9.params=baseValue\ difference
comment9.target=java.lang.Short\ subtract(short,\ short)
comment9.text=\n\ @param\ baseValue\ \ starting\ value\n\ @param\ difference\ value\ to\ subtract\ from\ starting\ value\n\ @return\ difference\ between\ `baseValue`\ and\ `difference`\n
numComments=27
